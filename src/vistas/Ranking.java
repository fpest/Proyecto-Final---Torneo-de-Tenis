/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import control.EstadioData;
import control.JugadorData;
import control.PartidoData;
import control.PatrocinioData;
import control.TorneoData;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.Estadio;
import modelo.Jugador;
import modelo.Partido;
import modelo.Patrocinio;
import modelo.Torneo;



/**
 *
 * @author FP
 */
public class Ranking extends javax.swing.JInternalFrame {
    
    
    private TorneoData torneoData;
    private PartidoData partidoData;
    private PatrocinioData patrocinioData;
    private JugadorData jugadorData;
        
    
    private ArrayList<Jugador> listaJugadores = new ArrayList<>();
    private ArrayList<Torneo> listaTorneos = new ArrayList<>();
    private ArrayList<Partido> listaPartidos = new ArrayList<>();
    private Jugador jugadorGanador;
    private Partido partido;
    /**
     * Creates new form Ranking
     */
    public Ranking() {
        initComponents();
    }

    public Ranking(TorneoData torneoData, PartidoData partidoData, PatrocinioData patrocinioData, JugadorData jugadorData){

        initComponents();
        
        this.torneoData = torneoData;
        this.partidoData = partidoData;
        this.patrocinioData = patrocinioData;
        this.jugadorData = jugadorData;

        llenarComboTorneos(true);
        if (cbTorneos.getItemCount()!=0) llenarTablaRanking((Torneo) cbTorneos.getSelectedItem());

    }
    
    private void llenarComboTorneos(boolean activo){
    
        listaTorneos = (ArrayList) torneoData.obtenerTodosLosTorneos();
        if (!listaTorneos.isEmpty()){
        int largoLista = listaTorneos.size();
        Torneo[] nombre = new Torneo[largoLista];

        int i = 0;

        for (Torneo torneo : listaTorneos) {
            if (torneo.isActivo() == activo) {
                cbTorneos.addItem(torneo);
                i++;
            }
        }}
    }
    
    private void llenarTablaRanking(Torneo torneo){
        
       
        DefaultTableModel model = (DefaultTableModel) tblRanking.getModel();
        tblRanking.setModel(model);
     
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tblRanking.setRowSorter(sorter);
      
      
      model.setRowCount(0);
        Jugador jugadorGanador = new Jugador();
        int cantidadPartidosGanados = 0;
        int cantidadPatrociniosActivos = 0 ;
        int puntosTotales = 0;
       List<Partido> listaPartidos = partidoData.obtenerPartidoJugadorGanador((Torneo) cbTorneos.getSelectedItem());
           
            for (Partido partido : listaPartidos) {
               jugadorGanador = partido.getJugadorGanador();
               cantidadPartidosGanados = partidoData.cantidadPartidosGanadosJugador(jugadorGanador,(Torneo) cbTorneos.getSelectedItem() );
               cantidadPatrociniosActivos = patrocinioData.cantidadPatrociniosActivos(jugadorGanador);
               puntosTotales = cantidadPartidosGanados * 3 + cantidadPatrociniosActivos;
               
                
                model.addRow(new Object[]{jugadorGanador.getApellido() + ", " + partido.getJugadorGanador().getNombre(), cantidadPartidosGanados , cantidadPatrociniosActivos, puntosTotales});
                           }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbTorneos = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRanking = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();

        setTitle("Ranking");

        jLabel1.setText("Torneos:");

        cbTorneos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTorneosActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Ranking");

        tblRanking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Jugador", "Partidos Ganados", "Patrocinadores Vigentes", "Puntos Totales"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRanking);
        if (tblRanking.getColumnModel().getColumnCount() > 0) {
            tblRanking.getColumnModel().getColumn(0).setResizable(false);
            tblRanking.getColumnModel().getColumn(1).setResizable(false);
            tblRanking.getColumnModel().getColumn(2).setResizable(false);
            tblRanking.getColumnModel().getColumn(3).setResizable(false);
        }

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cbTorneos, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(283, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(252, 252, 252))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSalir)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbTorneos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSalir)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void cbTorneosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTorneosActionPerformed
        llenarTablaRanking((Torneo) cbTorneos.getSelectedItem());
    }//GEN-LAST:event_cbTorneosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<Torneo> cbTorneos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRanking;
    // End of variables declaration//GEN-END:variables
}
