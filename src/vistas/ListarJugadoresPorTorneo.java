/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import control.JugadorData;
import control.PartidoData;
import control.PatrocinioData;
import control.TorneoData;
import java.util.ArrayList;
import modelo.Jugador;
import modelo.Partido;
import modelo.Torneo;

/**
 *
 * @author FP
 */
public class ListarJugadoresPorTorneo extends javax.swing.JInternalFrame {
    private TorneoData torneoData;
    private PartidoData partidoData;
    private JugadorData jugadorData;
        
    
    
    private ArrayList<Jugador> listaJugadores = new ArrayList<>();
    
    private ArrayList<Torneo> listaTorneos = new ArrayList<>();
    private ArrayList<Partido> listaPartidos = new ArrayList<>();
    private Partido partido;
    /**
     * Creates new form ListarJugadoresPorTorneo
     */
    public ListarJugadoresPorTorneo() {
        initComponents();
    }
    
     public ListarJugadoresPorTorneo(TorneoData torneoData, PartidoData partidoData, JugadorData jugadorData){

        initComponents();
        
        this.torneoData = torneoData;
        this.partidoData = partidoData;
        this.jugadorData = jugadorData;

        llenarComboTorneos(true);
        if (cbTorneos.getItemCount()!=0) llenarListaJugadores((Torneo) cbTorneos.getSelectedItem());

    }

     
     private void llenarComboTorneos(Boolean Activo){
     listaTorneos = (ArrayList) torneoData.obtenerTodosLosTorneos();
     
     if (!listaTorneos.isEmpty()){
        int largoLista = listaTorneos.size();
        Torneo[] nombre = new Torneo[largoLista];

        int i = 0;

        for (Torneo torneo : listaTorneos) {
            if (torneo.isActivo()) {
                cbTorneos.addItem(torneo);
                i++;
            }
        }
    }
     }
     
     private void llenarListaJugadores(Torneo torneo){
         
         listaJugadores =  (ArrayList) partidoData.obtenerJugadoresPorTorneo(torneo);
         lstJugadores.removeAll();

        
        int largoLista = listaJugadores.size();

        Jugador[] nombre = new Jugador[largoLista];
        int i = 0;

        for (Jugador jugador1 : listaJugadores) {
           
                nombre[i] = jugador1;
              i++;
           
        }

        lstJugadores.setModel(new javax.swing.AbstractListModel<Jugador>() {
            public int getSize() {
                return listaJugadores.size();
            }

            public Jugador getElementAt(int i) {
                return nombre[i];
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbTorneos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstJugadores = new javax.swing.JList<>();
        btnSalir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setTitle("Jugadores por Torneo");

        cbTorneos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTorneosActionPerformed(evt);
            }
        });

        jLabel1.setText("Torneos:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Lista de Jugadores Por Torneo");

        jScrollPane1.setViewportView(lstJugadores);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel3.setText("Lista de Jugadores:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(cbTorneos, 0, 186, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addComponent(jLabel2))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbTorneos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void cbTorneosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTorneosActionPerformed
     llenarListaJugadores((Torneo) cbTorneos.getSelectedItem());
    }//GEN-LAST:event_cbTorneosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<Torneo> cbTorneos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Jugador> lstJugadores;
    // End of variables declaration//GEN-END:variables
}
